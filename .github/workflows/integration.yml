name: HighFive_Integration_tests

on:
  push:
    branches: 
      - ci_test
  schedule:
    - cron: '5 3 * * *'
  repository_dispatch:
    types: [merge] # event_type set in HighFive integration_trigger.yml
  workflow_dispatch:
    inputs:
      highfive_branch:
        description: "HighFive branch to test against"
        required: false
        default: "master"
        type: string
        
        

env:
  BUILD_TYPE: RelWithDebInfo
  INSTALL_DIR: ${{github.workspace}}/install

jobs:

  Integration:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: "Install libraries"
      run: sudo apt-get update && sudo apt-get install libboost-all-dev libhdf5-dev libeigen3-dev

    - name: Build HighFive
      run: |
        BRANCH=${{ github.event.inputs.highfive_branch }}
        git clone https://github.com/BlueBrain/HighFive.git \
          --branch ${BRANCH:-"master"} --recursive
        cd HighFive
        CMAKE_OPTIONS=(-DHIGHFIVE_EXAMPLES:BOOL=False \
          -DHIGHFIVE_UNIT_TESTS:BOOL=False \
          -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
          -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR \
          -DHIGHFIVE_USE_EIGEN:BOOL=True)
        source $GITHUB_WORKSPACE/ci/build.sh
    - name: Build and Test MorphIO
      run: |
        git clone https://github.com/BlueBrain/MorphIO.git --recursive
        cd MorphIO
        CMAKE_OPTIONS=(-DCMAKE_BUILD_TYPE=$BUILD_TYPE \
          -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR \
          -DEXTERNAL_HIGHFIVE:BOOL=True)
        source $GITHUB_WORKSPACE/ci/build.sh
        cd build && ctest --output-on-failure
    - name: Build and Test libsonata
      if: success() || failure()
      run: |
        git clone https://github.com/BlueBrain/libsonata.git --recursive
        cd libsonata

        cd extlib/HighFive
        BRANCH=${{ github.event.inputs.highfive_branch }}
        git fetch && git checkout origin/${BRANCH:-"master"}
        cd ../..
        CMAKE_OPTIONS=(-DCMAKE_BUILD_TYPE=$BUILD_TYPE \
          -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR \
          -DEXTLIB_FROM_SUBMODULES:BOOL=True)
        source $GITHUB_WORKSPACE/ci/build.sh
        cd build && ctest --output-on-failure
    - name: live debug session on failure
      if: failure() && contains(github.event.head_commit.message, 'live-debug-ci')
      uses: mxschmitt/action-tmate@v3
